@model Dictionary<int, int>

@{
    ViewData["Title"] = "Moje Zadłużenie";
}

<!-- Dołącz Bootstrap CSS -->
@* <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" xintegrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous"> *@

<h1 class="display-5 text-dark mb-4">@ViewData["Title"]</h1>

<div class="container my-4">
    @if (Model != null && Model.Any())
    {
        <div class="row row-cols-1 g-3"> @* Using Bootstrap grid for spacing between debt boxes *@
            @foreach (var entry in Model)
            {
                var idUmowy = entry.Key;
                var kwota = entry.Value;
                // Warunkowe klasy Bootstrap dla stylizacji.
                // alert-danger dla długu (kwota >= 0), alert-success dla nadpłaty (kwota < 0).
                var alertClass = kwota >= 0 ? "alert-danger" : "alert-success";
                var statusText = kwota >= 0 ? "Do zapłaty" : "Nadpłata";

                <div class="col">
                    <div class="alert @alertClass shadow-sm rounded-lg p-4" role="alert">
                        <h5 class="alert-heading mb-1">Umowa ID: <span class="fw-bold">@idUmowy</span></h5>
                        <p class="lead mt-2 mb-0">
                            @statusText: <span class="fw-bolder">@kwota PLN</span>
                        </p>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info shadow-sm rounded-lg p-4" role="alert">
            <p class="mb-0">Brak danych o zadłużeniu dla tego użytkownika.</p>
        </div>
    }
</div>

<!-- Dołącz Bootstrap JS (opcjonalnie, ale dobre praktyki) -->
@* <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" xintegrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script> *@
